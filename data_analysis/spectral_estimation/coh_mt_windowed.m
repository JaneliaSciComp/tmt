function [f,...
          Cyx_mag, Cyx_phase, ...
          N_fft, f_res_diam, K, ...
          Cyx_mag_ci, Cyx_phase_ci, ...
          Cyx_mag_xf, Cyx_mag_xf_sigma, Cyx_mag_xf_ci, ...
          Cyx_phase_sigma]=...
  coh_mt_windowed(dt,y,x,...
                  NW,K,W_keep,...
                  p_FFT_extra,conf_level,...
                  N_window)
                
% x and y should be col vectors                

% process args
if nargin<5 || isempty(K)
  K=2*NW-1;
end
if nargin<6 || isempty(W_keep)
  W_keep=fs/2;
end
if nargin<7 || isempty(p_FFT_extra)
  p_FFT_extra=2;
end
if nargin<8 || isempty(conf_level)
  conf_level=0;  % i.e. no confidence intervals
end

% figure the window size
N_raw=size(x,1);
N_per_window=floor(N_raw/N_window);
N_all=N_window*N_per_window;

% trim
x=x(1:N_all);
y=y(1:N_all);

% divide into windows
x_windowed=reshape(x,[N_per_window N_window]);
y_windowed=reshape(y,[N_per_window N_window]);

% calc the coherence, averaging over windows
[f,...
 Cyx_mag, Cyx_phase, ...
 N_fft, f_res_diam, K, ...
 Cyx_mag_ci, Cyx_phase_ci, ...
 Cyx_mag_xf, Cyx_mag_xf_sigma, Cyx_mag_xf_ci,...
 Cyx_phase_sigma]=...
  coh_mt(dt,y_windowed,x_windowed,...
         NW,K,W_keep,...
         p_FFT_extra,conf_level);
      
end
