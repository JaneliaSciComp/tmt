classdef Controller < handle
    
    properties
        %controller  % the controller
        model  % the model
        
        figure_h
        colorbar_axes_h
        colorbar_h
        image_axes_h
        image_h
        
        to_start_button_h
        play_backward_button_h
        z_slice_backward_button_h
        stop_button_h
        z_slice_forward_button_h
        play_forward_button_h
        to_end_button_h
        
        z_index_text_h
        z_index_edit_h
        of_z_slice_count_text_h
        FPS_text_h
        FPS_edit_h
        
%         elliptic_roi_button_h
%         rect_roi_button_h
%         polygonal_roi_button_h
%         select_button_h
        zoom_button_h
%         move_all_button_h
        
        file_menu_h
        open_stack_menu_h
        close_stack_menu_h
%         open_rois_menu_h
%         save_rois_to_file_menu_h
%         export_to_tcs_menu_h
%         export_to_mask_menu_h
%         load_overlay_menu_h
        quit_menu_h
        
%         edit_menu_h
%         cut_menu_h
%         copy_menu_h
%         paste_menu_h
        
        color_menu_h
        pixel_data_type_min_max_menu_h
        min_max_menu_h
        five_95_menu_h
        abs_max_menu_h
        ninety_symmetric_menu_h
        colorbar_edit_bounds_menu_h
        gray_menu_h
        bone_menu_h
        hot_menu_h
        parula_menu_h
        jet_menu_h
        red_green_menu_h
        red_blue_menu_h
        brighten_menu_h
        darken_menu_h
        revert_menu_h
        
%         mutation_menu_h
%         motion_correct_menu_h
        
%         rois_menu_h
%         rename_roi_menu_h
%         delete_roi_menu_h
%         delete_all_rois_menu_h
%         hide_rois_menu_h
%         
%         overlay_menu_h
%         show_overlay_menu_h
        
%         z_index
%         % this holds the _playback_ z_slice rate, in z_slices/sec
%         stop_button_hit
%         % this is the current selection mode
%         mode
%         cmap_name
%         % colorbar_min and colorbar_max are constrained to be integers
%         colorbar_max_string
%         colorbar_min_string
%         colorbar_min  % the colorbar min, derived from cb_min_string,
%         % dependent in spirit
%         colorbar_max  % the colorbar max, derived from cb_min_string,
        
        
        
        
        % dependent in spirit
        % roi state
        %selected_roi_index
        %hide_rois
        %border_roi_h
        %label_roi_h
        
        % in-progress polygonal ROI
        %polygonal_roi
        
        % overlay state
        %overlay_h
        %show_overlay
        
%         % widget sizes that we want to store internally, for convenience
%         z_index_text_width
%         z_index_text_height
%         z_index_edit_width
%         z_index_edit_height
%         of_z_slice_count_text_width
%         of_z_slice_count_text_height
%         FPS_text_width
%         FPS_text_height
%         FPS_edit_width
%         FPS_edit_height
    end  % properties
    
    methods
        function self = Controller(varargin)
            % Leave the model empty until we load data
            self.model = lapwing.Model() ;
                        
            % Create the widgets
            self.create_widgets_() ;
            
            % Do a resize, to position things properly
            self.resize() ;
            
            % have to do this last, otherwise having the pointer in the place
            % where the window appears causes an error at startup
            set(self.figure_h,'WindowButtonMotionFcn', ...
                @(src,event)(self.update_pointer()));
            
            % Sync the views to the model
            self.update() ;
            
            % load the data, if given an arg
            if nargin >= 1 ,
                if ischar(varargin{1}) || isnumeric(varargin{1}) || islogical(varargin{1}) ,
                    file_name_or_stack = varargin{1} ;
                    self.open_file_given_file_name_or_stack(file_name_or_stack) ;
                end
            end
        end  % constructor
        
        function delete(self)  %#ok<INUSD>
        end
        
%         function [xl,yl] = get_image_viewport(self)
%             xl=get(self.image_axes_h,'xlim');
%             yl=get(self.image_axes_h,'ylim');
%         end
                
        %     function cb_min=get.colorbar_min(self)
        %       cb_min=str2double(self.cb_min_string);
        %     end
        %
        %     function cb_max=get.colorbar_max(self)
        %       cb_max=str2double(self.cb_max_string);
        %     end
        %
        
        function resize(self)            
            % IMPORTANT: Need to make sure we save the current
            % main figure units, set them to pels, then set them back at the end.
            % Some functions, like errordlg(), set them briefly to other things, and
            % sometimes the resize callback gets called during this interval, and that
            % causes the figure to get messed-up.
            
            % get current units, save; set units to pels
            units_before=get(self.figure_h,'units');
            set(self.figure_h,'units','pixels');
            
            % minimum figure dimensions --- if figure is smaller than this, we
            % nevertheless lay it out as if it was this size, but keeping the
            % upper-left corner of the layout in the upper-left of the figure.  This is
            % slightly tricky...
            minimum_layout_width = 600 ;  % pels
            minimum_layout_height = 400 ;
            
            % get figure size
            pos = get(self.figure_h,'position') ;
            figure_width = pos(3) ;
            figure_height = pos(4) ;
            
            % determine layout size, and the layout y offset (the layout x offset is
            % always zero)
            layout_width = max(minimum_layout_width, figure_width) ;
            layout_height = max(minimum_layout_height, figure_height) ;
            layout_y_offset = figure_height - layout_height ;
            % when figure_height > minimum_layout_height, this is zero
            % when figure_height < minimum_layout_height, this is negative, and
            % indicates how much controls have to be shifted in y to keep the
            % upper-left corner of the layout fixed.  This means that some parts of some of the
            % controls will not be visible, but not much else we can do, given that
            % there's no supported way to set the minimum figure size.
            
            %
            % calculate various UI sizes and offsets
            %
            %n_mode_buttons=6;
            mode_button_width=70;
            mode_button_height=30;
            mode_button_spacer_height=0;
            button_image_pad_width=20;  % pad between mode/action buttons and image
            % The "colorbar area" is a rectangle to the right of the "image z_slice".
            % The colorbar area just contains two rectangles, the colorbar itself (on
            % the left) and the "colorbar label area" on the right.
            colorbar_label_area_width=30;
            colorbar_width=30;
            colorbar_area_width=colorbar_width+colorbar_label_area_width;
            image_colorbar_pad_width=15;  % pad between image area and colorbar
            n_vcr_buttons=7;
            vcr_button_width=60;
            vcr_button_height=20;
            figure_right_pad_size=20;
            figure_left_pad_size=20;
            z_slice_index_and_fps_editbox_z_slice_height=40;
            vcr_button_bar_z_slice_height=50;
            image_z_slice_area_width=layout_width - ...
                (figure_left_pad_size+...
                mode_button_width+...
                button_image_pad_width+...
                image_colorbar_pad_width+...
                colorbar_area_width+...
                figure_right_pad_size);
            image_z_slice_area_height= ...
                layout_height - ...
                (z_slice_index_and_fps_editbox_z_slice_height+ ...
                vcr_button_bar_z_slice_height);
            image_z_slice_area_width=max(image_z_slice_area_width,1);
            image_z_slice_area_height=max(image_z_slice_area_height,1);
            % The "z_slice" is the area where the image goes.  It consists of a
            % transparent "matte" surrounding the image, with the image centered in the
            % z_slice.
            colorbar_area_height=image_z_slice_area_height;
            vcr_button_spacer_width=10;
            vcr_button_bar_width= ...
                n_vcr_buttons*vcr_button_width+(n_vcr_buttons-1)*vcr_button_spacer_width;
            vcr_button_bar_x_offset= ...
                figure_left_pad_size+mode_button_width+...
                button_image_pad_width+(image_z_slice_area_width-vcr_button_bar_width)/2;
            % The zoom factor for the image should be as large as possible s.t.
            % the image still fits within the image z_slice
            n_col=diff(get(self.image_axes_h,'xlim'));
            n_row=diff(get(self.image_axes_h,'ylim'));
            zoom=min((image_z_slice_area_width/n_col), ...
                (image_z_slice_area_height/n_row));
            
            % get the sizes of certain UI elements 
            z_index_text_extent = get(self.z_index_text_h,'Extent') ;
            z_index_text_width = z_index_text_extent(3) ;
            z_index_text_height = z_index_text_extent(4) ;
            
            %z_index_edit_extent=get(self.z_index_edit_h,'Extent');
            z_index_edit_width= 56 ;
            z_index_edit_height= 21 ;
            
%             of_z_slice_count_text_extent = get(self.of_z_slice_count_text_h,'Extent') ;
%             of_z_slice_count_text_width = of_z_slice_count_text_extent(3) ;
%             of_z_slice_count_text_height = of_z_slice_count_text_extent(4) ;
            
            FPS_text_extent = get(self.FPS_text_h,'Extent') ;
            FPS_text_width = FPS_text_extent(3) ;
            FPS_text_height = FPS_text_extent(4) ;
            
            %FPS_edit_extent = get(self.FPS_edit_h,'Extent') ;
            FPS_edit_width = 30 ;  % padding
            FPS_edit_height = 21 ;  % padding
            
            
            %
            % Set positions of UI widgets
            %
            
            % position the colorbar axes
            set(self.colorbar_axes_h, ... = ...
                'Position',[figure_left_pad_size+...
                mode_button_width+...
                button_image_pad_width+...
                image_z_slice_area_width+...
                image_colorbar_pad_width,...
                layout_y_offset+vcr_button_bar_z_slice_height,...
                colorbar_width,...
                colorbar_area_height]);
            
            % position the image axes
            image_area_width=zoom*n_col;
            image_area_height=zoom*n_row;
            matte_width=(image_z_slice_area_width-image_area_width)/2;
            matte_height=(image_z_slice_area_height-image_area_height)/2;
            set(self.image_axes_h, ...
                'Position',[figure_left_pad_size+mode_button_width+button_image_pad_width+ ...
                matte_width,...
                layout_y_offset+vcr_button_bar_z_slice_height+matte_height,...
                image_area_width,...
                image_area_height]);
            
            % VCR-style controls
            set(self.to_start_button_h , ...
                'Position',...
                [vcr_button_bar_x_offset+...
                (1-1)*(vcr_button_width+vcr_button_spacer_width),...
                layout_y_offset+(vcr_button_bar_z_slice_height-vcr_button_height)/2,...
                vcr_button_width,...
                vcr_button_height]);
            set(self.play_backward_button_h , ...
                'Position',...
                [vcr_button_bar_x_offset+...
                (2-1)*(vcr_button_width+vcr_button_spacer_width),...
                layout_y_offset+(vcr_button_bar_z_slice_height-vcr_button_height)/2,...
                vcr_button_width,...
                vcr_button_height]);
            set(self.z_slice_backward_button_h , ...
                'Position',...
                [vcr_button_bar_x_offset+...
                (3-1)*(vcr_button_width+vcr_button_spacer_width),...
                layout_y_offset+(vcr_button_bar_z_slice_height-vcr_button_height)/2,...
                vcr_button_width,...
                vcr_button_height]);
            set(self.stop_button_h , ...
                'Position',...
                [vcr_button_bar_x_offset+...
                (4-1)*(vcr_button_width+vcr_button_spacer_width),...
                layout_y_offset+(vcr_button_bar_z_slice_height-vcr_button_height)/2,...
                vcr_button_width,...
                vcr_button_height]);
            set(self.z_slice_forward_button_h , ...
                'Position',...
                [vcr_button_bar_x_offset+...
                (5-1)*(vcr_button_width+vcr_button_spacer_width),...
                layout_y_offset+(vcr_button_bar_z_slice_height-vcr_button_height)/2,...
                vcr_button_width,...
                vcr_button_height]);
            set(self.play_forward_button_h , ...
                'Position',...
                [vcr_button_bar_x_offset+...
                (6-1)*(vcr_button_width+vcr_button_spacer_width),...
                layout_y_offset+(vcr_button_bar_z_slice_height-vcr_button_height)/2,...
                vcr_button_width,...
                vcr_button_height]);
            set(self.to_end_button_h , ...
                'Position',...
                [vcr_button_bar_x_offset+...
                (7-1)*(vcr_button_width+vcr_button_spacer_width),...
                layout_y_offset+(vcr_button_bar_z_slice_height-vcr_button_height)/2,...
                vcr_button_width,...
                vcr_button_height]);
            
            % set the position of the text object that says "Frame"
            z_index_text_left_margin=figure_left_pad_size+mode_button_width+...
                button_image_pad_width;
            z_index_text_baseline= ...
                layout_height-(z_slice_index_and_fps_editbox_z_slice_height+z_index_text_height)/2;
            set(self.z_index_text_h, ...
                'Position',[z_index_text_left_margin,...
                layout_y_offset+z_index_text_baseline,...
                z_index_text_width,...
                z_index_text_height]);
            
            % set the position of the editbox containing the current z_slice index
            set(self.z_index_edit_h,...
                'Position',[z_index_text_left_margin+z_index_text_width,...
                layout_y_offset+z_index_text_baseline+...
                (z_index_text_height-z_index_edit_height)/2+2,...
                z_index_edit_width,...
                z_index_edit_height]);
            
            % set the position of the text object that says "of <number of z_slices total>"
%             set(self.of_z_slice_count_text_h, ...
%                 'Position',[z_index_text_left_margin+z_index_text_width + ...
%                                 z_index_edit_width, ...
%                             layout_y_offset+z_index_text_baseline, ...
%                             of_z_slice_count_text_width, ...
%                             of_z_slice_count_text_height]) ;
            lapwing.set_offset_bang(self.of_z_slice_count_text_h, [z_index_text_left_margin+z_index_text_width + ...
                                                                       z_index_edit_width, ...
                                                                   layout_y_offset+z_index_text_baseline]) ;
            
            % Set the positions of z_slices-per-second controls
            FPS_elements_width=FPS_text_width+FPS_edit_width;
            FPS_elements_left_margin=figure_left_pad_size+mode_button_width+...
                button_image_pad_width+image_z_slice_area_width-...
                FPS_elements_width;
            FPS_elements_baseline= ...
                layout_height-(z_slice_index_and_fps_editbox_z_slice_height+FPS_text_height)/2;
            set(self.FPS_text_h, ...
                'Position',[FPS_elements_left_margin,...
                layout_y_offset+FPS_elements_baseline,...
                FPS_text_width,...
                FPS_text_height]);
            set(self.FPS_edit_h,...
                'Position',[FPS_elements_left_margin+FPS_text_width,...
                layout_y_offset+FPS_elements_baseline+...
                (FPS_text_height-FPS_edit_height)/2+2,...
                FPS_edit_width,...
                FPS_edit_height]);
            
            % Set the positions of the mode buttons
            mode_button_bar_y_offset= ...
                vcr_button_bar_z_slice_height+image_z_slice_area_height-mode_button_height;
%             set(self.elliptic_roi_button_h , ...
%                 'Position',...
%                 [figure_left_pad_size,...
%                 layout_y_offset+mode_button_bar_y_offset-...
%                 (1-1)*(mode_button_height+mode_button_spacer_height),...
%                 mode_button_width,...
%                 mode_button_height]);
%             set(self.rect_roi_button_h , ...
%                 'Position',...
%                 [figure_left_pad_size,...
%                 layout_y_offset+mode_button_bar_y_offset-...
%                 (2-1)*(mode_button_height+mode_button_spacer_height),...
%                 mode_button_width,...
%                 mode_button_height]);
%             set(self.polygonal_roi_button_h , ...
%                 'Position',...
%                 [figure_left_pad_size,...
%                 layout_y_offset+mode_button_bar_y_offset-...
%                 (3-1)*(mode_button_height+mode_button_spacer_height),...
%                 mode_button_width,...
%                 mode_button_height]);
%             set(self.select_button_h , ...
%                 'Position',...
%                 [figure_left_pad_size,...
%                 layout_y_offset+mode_button_bar_y_offset-...
%                 (4-1)*(mode_button_height+mode_button_spacer_height),...
%                 mode_button_width,...
%                 mode_button_height]);
            set(self.zoom_button_h , ...
                'Position',...
                [figure_left_pad_size,...
                layout_y_offset+mode_button_bar_y_offset-...
                (1-1)*(mode_button_height+mode_button_spacer_height),...
                mode_button_width,...
                mode_button_height]);
%             set(self.move_all_button_h , ...
%                 'Position',...
%                 [figure_left_pad_size,...
%                 layout_y_offset+mode_button_bar_y_offset-...
%                 (6-1)*(mode_button_height+mode_button_spacer_height),...
%                 mode_button_width,...
%                 mode_button_height]);
            
            
            % restore fig units
            set(self.figure_h,'units',units_before);            
        end
        
        function handle_z_index_edit(self)            
            new_z_index_string = get(self.z_index_edit_h,'String') ;
            new_z_index = str2double(new_z_index_string) ;
            self.change_z_slice_abs(new_z_index) ;
        end
        
        function handle_colorbar_menus(self, tag)
            % switch on the tag
            switch(tag)
                case 'pixel_data_type_min_max'
                    self.model.set_colorbar_bounds(tag) ;
                case 'min_max'
                    self.hourglass();
                    self.model.set_colorbar_bounds(tag) ;
                    self.unhourglass();
                case 'five_95'
                    self.hourglass();
                    self.model.set_colorbar_bounds(tag) ;
                    self.unhourglass();
                case 'abs_max'
                    self.hourglass();
                    self.model.set_colorbar_bounds(tag) ;
                    self.unhourglass();
                case 'ninety_symmetric'
                    % need to fix this, since what it does now is useless
                    self.hourglass();
                    self.model.set_colorbar_bounds(tag) ;
                    self.unhourglass();
                case 'colorbar_edit_bounds'
                    % get the current y min and y max strings
                    cb_min_string = self.model.colorbar_min_string ;
                    cb_max_string = self.model.colorbar_max_string ;
                    % throw up the dialog box
                    bounds=inputdlg({ 'Colorbar Maximum:' , 'Colorbar Minimum:' },...
                        'Edit Colorbar Bounds...',...
                        1,...
                        { cb_max_string , cb_min_string });
                    if ~isempty(bounds) ,
                        self.hourglass();
                        self.model.set_colorbar_bounds('manual', bounds) ;
                        self.unhourglass();
                    end
            end

            self.hourglass();
            
            % change the axes and colorbar
            cb_min = self.model.colorbar_min ;
            cb_max = self.model.colorbar_max ;
            set(self.colorbar_axes_h, 'YLim', [cb_min cb_max]) ;
            set(self.colorbar_h, 'YData', [cb_min cb_max]) ;

            % recalculate indexed_z_slice, set in figure
            if self.model.is_a_file_open ,
                % change the displayed image
                set(self.image_h, 'CData', self.model.indexed_z_slice) ;
            end
            
            self.unhourglass();            
        end  % method
        
    end  % methods
    
    methods (Access=private)
        function create_widgets_(self)
            % get the screen size so we can position the figure window
            root_units=get(0,'Units');
            set(0,'Units','pixels');
            screen_dims=get(0,'ScreenSize');
            %screen_width=screen_dims(3);
            screen_height=screen_dims(4);
            set(0,'Units',root_units);
            
            %
            % spec out the initial size, position of the figure
            %
            
            screen_left_pad_size=20;
            screen_top_pad_size=20;
            % these are designed to just accomodate a 512x512 image
            figure_width=722;
            figure_height=602;
            
%             % minimum figure dimensions
%             figure_width_min=600;  % pels
%             figure_height_min=400;
            
            %
            % Image figure and children
            %
            
            % Put up the figure, using the correct size, but only a first guess at the offset
            self.figure_h = ...
                figure('Visible','off', ...
                'MenuBar','none',...
                'Position', ...
                [screen_left_pad_size, ...
                screen_height-figure_height-screen_top_pad_size+1, ...
                figure_width, ...
                figure_height]);
            
            % Position the figure in the upper left, keeping the same size
            lapwing.position_in_upper_left_corner_of_primary_screen_bang(self.figure_h, screen_left_pad_size, screen_top_pad_size) ;
            
            % create the image figure
            set(self.figure_h, ...
                'Visible','on', ...
                'Name','Lapwing',...
                'NumberTitle','off',...
                'Colormap',eval(sprintf('%s(256)',self.model.cmap_name)),...
                'DockControls','off', ...
                'PaperPositionMode','auto',...
                'InvertHardcopy','off',...
                'DoubleBuffer','on', ...
                'Color',get(0,'defaultUicontrolBackgroundColor')) ;  
            %                'CloseRequestFcn',@(src,event)(self.quit()), ...
            %                'ResizeFcn',@(src,event)(self.resize()),...
            %                'Resize','on');
            %         'Color',[236 233 216]/255,...
            %         'WindowKeyPressFcn', ...
            %           @(src,event)(self.handle_key_press(event)),...
            %         'WindowKeyReleaseFcn', ...
            %           @(src,event)(self.handle_key_release(event)),...
            
            %
            % Do this stuff after, because at same time causes problems in R2015a
            set(self.figure_h, ...
                'ResizeFcn',@(source,event)(self.resize()),...
                'CloseRequestFcn',@(source,event)(self.quit()));
            
            % Do some hacking to set the minimum figure size
            %drawnow('update');
            %drawnow('expose');
            %       fpj=get(handle(self.figure_h),'JavaFrame');
            %       jw=fpj.fHG1Client.getWindow();
            %       if ~isempty(jw)
            %         jw.setMinimumSize(java.awt.Dimension(figure_width_min, ...
            %                                              figure_height_min));
            %       end
            
            % Want to know when we get/lose focus, so have to do some hacking.
            %drawnow('update');
            %drawnow('expose');
            % % this code relies on undocumented features, and doesn't seem to
            % % work reliably on Windows XP 32-bit -- ALT, 2012-08-14
            % fpj=get(handle(self.figure_h),'JavaFrame');
            % jw=fpj.fHG1Client.getWindow;
            % jcb=handle(jw,'CallbackProperties');
            % set(jcb,'WindowGainedFocusCallback', ...
            %     @(src,event)(self.handle_focus_gained()));
            % %set(jcb,'WindowLostFocusCallback', ...
            % %    @(src,event)(self.handle_focus_lost()));
            % clear fpj jw jcb;
            
%             % figure out the colorbar min and colorbar max
%             colorbar_min_string='0';
%             colorbar_max_string='255';
%             colorbar_min=str2double(colorbar_min_string);
%             colorbar_max=str2double(colorbar_max_string);
            
            % create the colorbar axes and the colorbar image
            self.colorbar_axes_h = ...
                axes('Parent',self.figure_h,...
                'Tag','colorbar_axes_h',...
                'Units','pixels',...
                'Visible','on',...
                'Box','on',...
                'XLim',[0.5 1.5],...
                'YLim',[self.model.colorbar_min self.model.colorbar_max],...
                'XTick',[],...
                'YAxisLocation','right', ...
                'Layer','top'); 
            self.colorbar_h = ...
                image('Parent',self.colorbar_axes_h,...
                'CData',(0:255)',...
                'Tag','colorbar_h',...
                'XData',[1 1],...
                'YData',[self.model.colorbar_min self.model.colorbar_max]); 
            
            % create the image axes and the image
            self.image_axes_h = ...
                axes('Parent',self.figure_h,...
                'Tag','image_axes_h',...
                'YDir','reverse',...
                'Visible','off',...
                'Units','pixels',...
                'DataAspectRatio',[1 1 1]);
            self.image_h = [];
            %'XLim',[0.5,image_z_slice_area_width+0.5],...
            %'YLim',[0.5,image_z_slice_area_height+0.5],...
            
            % VCR-style controls
            self.to_start_button_h = ...
                uicontrol('Parent',self.figure_h,...
                'Style','pushbutton',...
                'String','|<',...
                'Tag','to_start_button_h',...
                'enable','off',...
                'Callback',@(src,event)(self.change_z_slice_abs(1)));
            self.play_backward_button_h = ...
                uicontrol('Parent',self.figure_h,...
                'Style','pushbutton',...
                'String','<',...
                'Tag','play_backward_button_h',...
                'enable','off',...
                'Callback',@(src,event)(self.play(-1)));
            self.z_slice_backward_button_h = ...
                uicontrol('Parent',self.figure_h,...
                'Style','pushbutton',...
                'String','<|',...
                'Tag','z_slice_backward_button_h',...
                'enable','off',...
                'Callback', ...
                @(src,event)(self.change_z_slice_rel(-1)));
            self.stop_button_h = ...
                uicontrol('Parent',self.figure_h,...
                'Style','pushbutton',...
                'String','O',...
                'Tag','stop_button_h',...
                'enable','off',...
                'Callback', ...
                @(src,event)(self.stop_playing()));
            self.z_slice_forward_button_h = ...
                uicontrol('Parent',self.figure_h,...
                'Style','pushbutton',...
                'String','|>',...
                'Tag','z_slice_forward_button_h',...
                'enable','off',...
                'Callback',@(src,event)(self.change_z_slice_rel(+1)));
            self.play_forward_button_h = ...
                uicontrol('Parent',self.figure_h,...
                'Style','pushbutton',...
                'String','>',...
                'Tag','play_forward_button_h',...
                'enable','off',...
                'Callback',@(src,event)(self.play(+1)));
            self.to_end_button_h = ...
                uicontrol('Parent',self.figure_h,...
                'Style','pushbutton',...
                'String','>|',...
                'Tag','to_end_button_h',...
                'enable','off',...
                'Callback', ...
                @(src,event)(self.change_z_slice_abs(self.model.z_slice_count)));
            
            % Set the number of pixels to add to the extent to get things to look
            % nice.  This varies by platform.
            [edit_pad_width, edit_pad_height, edit_horizontal_alignment, edit_bg_color] = ...
                lapwing.get_platform_dependent_quantities() ;  %#ok<ASGLU>
            
            %
            % Frame index counter: Frame: <i> of <n> z_slices
            %
            % Determine sizes of the three widgets: two text uicontrols and one
            % edit uicontrol.  For the edit, display a large string before
            % getting the extent, so we can set it's size to be as big as we'll
            % ever need it.
            figureColor = get(self.figure_h,'Color') ;
            self.z_index_text_h = ...
                uicontrol('Parent',self.figure_h,...
                'Style','text',...
                'String','Z Slice ',...
                'Tag','z_index_text_h',...
                'BackgroundColor',figureColor);
            %z_index_text_extent=get(self.z_index_text_h,'Extent');
            %self.z_index_text_width=z_index_text_extent(3);
            %self.z_index_text_height=z_index_text_extent(4);
            self.z_index_edit_h = ...
                uicontrol('Parent',self.figure_h,...
                'Style','edit',...
                'Tag','z_index_edit_h',...
                'Min',0,...
                'Max',1,...
                'enable','off',...
                'HorizontalAlignment',edit_horizontal_alignment,...
                'BackgroundColor',edit_bg_color,...
                'Callback',@(src,event)(self.handle_z_index_edit()));
            self.of_z_slice_count_text_h = ...
                uicontrol('Parent',self.figure_h,...
                'Style','text',...
                'HorizontalAlignment','left',...
                'Tag','of_z_slice_count_text_h',...
                'BackgroundColor',get(self.figure_h,'Color')) ;
            
            % Determine sizes of z_slices per second controls
            self.FPS_text_h = ...
                uicontrol('Parent',self.figure_h,...
                'Style','text',...
                'String','FPS: ',...
                'Tag','FPS_text_h',...
                'BackgroundColor',get(self.figure_h,'Color'));
            self.FPS_edit_h = ...
                uicontrol('Parent',self.figure_h,...
                'Style','edit',...
                'Tag','FPS_edit_h',...
                'Min',0,...
                'Max',1,...
                'enable','off',...
                'HorizontalAlignment',edit_horizontal_alignment,...
                'BackgroundColor',edit_bg_color,...
                'Callback',@(src,event)(self.handle_fps_edit()));
            
%             % Mode buttons
%             self.elliptic_roi_button_h = ...
%                 uicontrol('Parent',self.figure_h,...
%                 'Style','togglebutton',...
%                 'String','Ellipse',...
%                 'Tag','elliptic_roi_button_h',...
%                 'enable','off',...
%                 'Callback',@(src,event)(self.set_mode('elliptic_roi')),...
%                 'Value',1);
%             self.rect_roi_button_h = ...
%                 uicontrol('Parent',self.figure_h,...
%                 'Style','togglebutton',...
%                 'String','Rect',...
%                 'Tag','rect_roi_button_h',...
%                 'enable','off',...
%                 'Callback',@(src,event)(self.set_mode('rect_roi')));
%             self.polygonal_roi_button_h = ...
%                 uicontrol('Parent',self.figure_h,...
%                 'Style','togglebutton',...
%                 'String','Polygon',...
%                 'Tag','polygonal_roi_button_h',...
%                 'enable','off',...
%                 'Callback',@(src,event)(self.set_mode('polygonal_roi')));
%             self.select_button_h = ...
%                 uicontrol('Parent',self.figure_h,...
%                 'Style','togglebutton',...
%                 'String','Select',...
%                 'Tag','select_button_h',...
%                 'Enable','off',...
%                 'Callback',@(src,event)(self.set_mode('select')));
            self.zoom_button_h = ...
                uicontrol('Parent',self.figure_h,...
                'Style','togglebutton',...
                'String','Zoom',...
                'Tag','zoom_button_h',...
                'enable','off',...
                'Callback',@(src,event)(self.set_mode('zoom')));
%             self.move_all_button_h = ...
%                 uicontrol('Parent',self.figure_h,...
%                 'Style','togglebutton',...
%                 'String','Move All',...
%                 'Tag','move_all_button_h',...
%                 'Enable','off',...
%                 'Callback',@(src,event)(self.set_mode('move_all')));
            
            %
            % add some menus
            %
            
            % The File menu
            self.file_menu_h= ...
                uimenu(self.figure_h,...
                'Label','File');
            self.open_stack_menu_h= ...
                uimenu(self.file_menu_h,...
                'Label','Open...',...
                'Accelerator','o',...
                'Callback',@(~,~)(self.choose_file_and_open()));
            self.close_stack_menu_h= ...
                uimenu(self.file_menu_h,...
                'Label','Close',...
                'Accelerator','w',...
                'Callback',@(~,~)(self.close_file()));
%             self.open_rois_menu_h= ...
%                 uimenu(self.file_menu_h,...
%                 'Label','Open ROI file...',...
%                 'Tag','open_rois_menu_h',...
%                 'enable','off',...
%                 'Separator','on',...
%                 'Callback',@(~,~)(self.choose_roi_file_and_load()));
%             self.save_rois_to_file_menu_h= ...
%                 uimenu(self.file_menu_h,...
%                 'Label','Save ROIs...',...
%                 'Tag','save_rois_to_file_menu_h',...
%                 'enable','off',...
%                 'Callback',@(~,~)(self.save_rois_to_file()),...
%                 'Enable','off');
%             self.export_to_tcs_menu_h= ...
%                 uimenu(self.file_menu_h,...
%                 'Label','Export ROI signals...',...
%                 'enable','off',...
%                 'Callback',@(~,~)(self.choose_file_and_export_to_tcs_file()),...
%                 'Enable','off');
%             self.export_to_mask_menu_h= ...
%                 uimenu(self.file_menu_h,...
%                 'Label','Export ROI mask...',...
%                 'enable','off',...
%                 'Callback',@(~,~)(self.choose_file_and_export_rois_to_image_file()),...
%                 'Enable','off');
%             self.load_overlay_menu_h= ...
%                 uimenu(self.file_menu_h,...
%                 'Label','Load overlay...',...
%                 'enable','off',...
%                 'Separator','on',...
%                 'Callback',@(~,~)(self.choose_overlay_file_and_load()));
            self.quit_menu_h= ...
                uimenu(self.file_menu_h,...
                'Label','Quit',...
                'Separator','on',...
                'Callback',@(~,~)(self.quit()));
            
%             % The Edit menu
%             self.edit_menu_h= ...
%                 uimenu(self.figure_h,...
%                 'Label','Edit');
%             self.cut_menu_h= ...
%                 uimenu(self.edit_menu_h,...
%                 'Label','Cut',...
%                 'Accelerator','x',...
%                 'enable','off',...
%                 'Callback', ...
%                 @(~,~)(self.cut_selected_roi_to_clipboard()));
%             self.copy_menu_h= ...
%                 uimenu(self.edit_menu_h,...
%                 'Label','Copy',...
%                 'Accelerator','c',...
%                 'enable','off',...
%                 'Callback', ...
%                 @(~,~)(self.copy_selected_roi_to_clipboard()));
%             self.paste_menu_h= ...
%                 uimenu(self.edit_menu_h,...
%                 'Label','Paste',...
%                 'Accelerator','v',...
%                 'enable','off',...
%                 'Callback', ...
%                 @(~,~)(self.paste_roi_from_clipboard()));
            
            % the Color menu
            self.color_menu_h= ...
                uimenu(self.figure_h,...
                'Tag','color_menu_h',...
                'Label','Color');
            self.pixel_data_type_min_max_menu_h= ...
                uimenu(self.color_menu_h,...
                'Tag','pixel_data_type_min_max_menu_h',...
                'enable','off',...
                'Label','Pixel data type min/max',...
                'Callback', ...
                @(~,~)(self.handle_colorbar_menus(...
                'pixel_data_type_min_max')));
            self.min_max_menu_h= ...
                uimenu(self.color_menu_h,...
                'Tag','min_max_menu_h',...
                'enable','off',...
                'Label','Minimum/Maximum',...
                'Callback', ...
                @(~,~)(self.handle_colorbar_menus('min_max')));
            self.five_95_menu_h= ...
                uimenu(self.color_menu_h,...
                'Tag','five_95_menu_h',...
                'enable','off',...
                'Label','5%/95%',...
                'Callback', ...
                @(~,~)(self.handle_colorbar_menus('five_95')));
            self.abs_max_menu_h= ...
                uimenu(self.color_menu_h,...
                'Tag','abs_max_menu_h',...
                'enable','off',...
                'Label','-Absolute Maximum/+Absolute Maximum',...
                'Callback', ...
                @(~,~)(self.handle_colorbar_menus('abs_max')));
            self.ninety_symmetric_menu_h= ...
                uimenu(self.color_menu_h,...
                'Tag','ninety_symmetric_menu_h',...
                'enable','off',...
                'Label','90% Symmetric',...
                'Callback', ...
                @(~,~)(self.handle_colorbar_menus('ninety_symmetric')));
            self.colorbar_edit_bounds_menu_h= ...
                uimenu(self.color_menu_h,...
                'Tag','colorbar_edit_bounds_menu_h',...
                'Label','Edit Colorbar Bounds...',...
                'Callback', ...
                @(~,~)(self.handle_colorbar_menus('colorbar_edit_bounds')));
            self.gray_menu_h= ...
                uimenu(self.color_menu_h,...
                'Tag','gray_menu_h',...
                'Label','Gray',...
                'Callback',@(src,event)(self.set_cmap_name('gray')),...
                'Checked','on',...
                'Separator','on');
            self.bone_menu_h= ...
                uimenu(self.color_menu_h,...
                'Tag','bone_menu_h',...
                'Label','Bone',...
                'Callback',@(src,event)(self.set_cmap_name('bone')));
            self.hot_menu_h= ...
                uimenu(self.color_menu_h,...
                'Tag','hot_menu_h',...
                'Label','Hot',...
                'Callback',@(src,event)(self.set_cmap_name('hot')));
            self.parula_menu_h= ...
                uimenu(self.color_menu_h,...
                'Tag','parula_menu_h',...
                'Label','Parula',...
                'Callback',@(src,event)(self.set_cmap_name('parula')));
            if verLessThan('matlab','8.4') ,
                set(self.parula_menu_h,'Visible','off') ;  % no such colormap in pre-r2014b
            end
            self.jet_menu_h= ...
                uimenu(self.color_menu_h,...
                'Tag','jet_menu_h',...
                'Label','Jet',...
                'Callback',@(src,event)(self.set_cmap_name('jet')));
            self.red_green_menu_h= ...
                uimenu(self.color_menu_h,...
                'Tag','red_green_menu_h',...
                'Label','Red/Green',...
                'Callback',@(src,event)(self.set_cmap_name('red_green')));
            self.red_blue_menu_h= ...
                uimenu(self.color_menu_h,...
                'Tag','red_blue_menu_h',...
                'Label','Red/Blue',...
                'Callback',@(src,event)(self.set_cmap_name('red_blue')));
            self.brighten_menu_h= ...
                uimenu(self.color_menu_h,...
                'Label','Brighten',...
                'Tag','brighten_menu_h',...
                'Accelerator','b',...
                'Callback',@(src,event)(self.brighten()),...
                'Separator','on');
            self.darken_menu_h= ...
                uimenu(self.color_menu_h,...
                'Label','Darken',...
                'Tag','darken_menu_h',...
                'Accelerator','d',...
                'Callback',@(src,event)(self.darken()));
            self.revert_menu_h= ...
                uimenu(self.color_menu_h,...
                'Label','Revert',...
                'Tag','revert_menu_h',...
                'Accelerator','r',...
                'Callback',@(src,event)(self.revert_gamma()));
            
            % Mutation is complicated now that we've switched to reading in
            % a z_slice at a time from an on-disk file...
            % % the mutation menu
            %self.mutation_menu_h= ...
            %  uimenu(self.figure_h,...
            %         'enable','off',...
            %         'Label','Mutation');
            %self.motion_correct_menu_h= ...
            %  uimenu(self.mutation_menu_h,...
            %         'Label','Motion correct',...
            %         'Callback',@(~,~)(self.motion_correct()),...
            %         'Enable','off');
            
%             % the ROI menu
%             self.rois_menu_h= ...
%                 uimenu(self.figure_h,...
%                 'Tag','rois_menu_h',...
%                 'enable','on',...
%                 'Label','ROIs');
%             self.rename_roi_menu_h= ...
%                 uimenu(self.rois_menu_h,...
%                 'Label','Rename Selected',...
%                 'Tag','rename_roi_menu_h',...
%                 'enable','off',...
%                 'Callback',@(~,~)(self.rename_roi()),...
%                 'Enable','off');
%             self.delete_roi_menu_h= ...
%                 uimenu(self.rois_menu_h,...
%                 'Label','Delete Selected',...
%                 'enable','off',...
%                 'Tag','delete_roi_menu_h',...
%                 'Callback',@(~,~)(self.delete_selected_roi()),...
%                 'Enable','off');
%             self.delete_all_rois_menu_h= ...
%                 uimenu(self.rois_menu_h,...
%                 'Label','Delete All',...
%                 'Tag','delete_all_rois_menu_h',...
%                 'enable','off',...
%                 'Callback',@(~,~)(self.delete_all_rois()),...
%                 'Enable','off');
%             self.hide_rois_menu_h= ...
%                 uimenu(self.rois_menu_h,...
%                 'Label','Hide ROIs',...
%                 'Tag','hide_rois_menu_h',...
%                 'enable','off',...
%                 'Callback',@(~,~)(self.toggle_hide_rois()),...
%                 'Enable','off',...
%                 'Separator','on');
            
%             % the Overlay menu
%             self.overlay_menu_h= ...
%                 uimenu(self.figure_h,...
%                 'Tag','overlay_menu_h',...
%                 'Label','Overlay');
%             self.show_overlay_menu_h= ...
%                 uimenu(self.overlay_menu_h,...
%                 'Label','Hide Overlay',...
%                 'Tag','show_overlay_menu_h',...
%                 'enable','off',...
%                 'Callback',@(~,~)(self.toggle_show_overlay()),...
%                 'Enable','off');
            
%             % roi state
%             self.selected_roi_index=zeros(0,1);
%             self.hide_rois=false;
%             self.border_roi_h=zeros(0,1);
%             self.label_roi_h=zeros(0,1);
%             % overlay state
%             self.show_overlay=true;            
        end  % create_widgets_
        
    end  % private methods
    
end  % classdef
